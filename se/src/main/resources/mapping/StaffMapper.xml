<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pink.se.mapper.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.pink.se.model.Staff" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pos_id" property="posId" jdbcType="INTEGER" />
    <result column="dep_id" property="depId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pos_id, dep_id, name, avatar, email, password, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pink.se.model.Staff" >
    insert into t_staff (id, pos_id, dep_id, 
      name, avatar, email, password, 
      sex)
    values (#{id,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{depId,jdbcType=INTEGER}, 
      #{name,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pink.se.model.Staff" >
    insert into t_staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="posId != null" >
        pos_id,
      </if>
      <if test="depId != null" >
        dep_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="posId != null" >
        #{posId,jdbcType=INTEGER},
      </if>
      <if test="depId != null" >
        #{depId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pink.se.model.Staff" >
    update t_staff
    <set >
      <if test="posId != null" >
        pos_id = #{posId,jdbcType=INTEGER},
      </if>
      <if test="depId != null" >
        dep_id = #{depId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pink.se.model.Staff" >
    update t_staff
    set pos_id = #{posId,jdbcType=INTEGER},
      dep_id = #{depId,jdbcType=INTEGER},
      name = #{name,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>